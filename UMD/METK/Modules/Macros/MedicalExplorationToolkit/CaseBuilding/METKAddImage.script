Interface  {
   Inputs {
      Field inObjectContainer { internalName = ObjInfo.inObjectContainer }
      Field image             { internalName = Bypass.input0 }
   }
   Outputs {
      Field outObjectContainer { internalName = ObjInfo.outObjectContainer }
   }
   Parameters { 
      Field objectID     { type = string value = ""  persistent = false }
      Field create       { type = trigger }
   }
}


Commands  {
   // Add the local's parent path to the import path, so that Python looks for local packages
   importPath = "$(LOCAL)"
   importPath = "$(LOCAL)/.."
   
   // Include local functions
   source = "$(LOCAL)/METKAddImage.py"
   
   // Call init() to initalize the script
   initCommand = init
   
   // Handle events from object container
   FieldListener ObjInfo.outObjectContainer { command = _cls_info.handleEvents }
   FieldListener create                     { command = create }
}


Window METKAddImage {
   w = 300
   Vertical { 
      Field = objectID { edit = No }
      Button = create { title = "Create Entries" }
   }
}