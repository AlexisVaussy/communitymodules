Interface  {
   Inputs {
      Field inObjectContainer  { internalName = info.inObjectContainer }
   }
   Outputs {
      Field outObjectContainer { internalName = info.outObjectContainer }
      Field image              { internalName = ImgLoad.output0 comment = "Current coded segmentation" }
   }
   Parameters {
      Field ignoreEmptyString { type = bool value = True }
      Field rois              { type = string value = "[none]" persistent = FALSE }
      Field roiSelect         { type = string value = "" persistent = FALSE }           
      Field objValues         { internalName = CalcCodedSegmentation.ObjectValues }
      Field imgValues         { internalName = CalcCodedSegmentation.ImageValues }
      Field forceGeneration   { type=trigger }
      Field closeImg          { type=trigger }
      Field listenToROI       { type = string value = "" }
      Field ready             { type = bool value = False persistent = False priority = 0 }
   }
}

Commands  {
   // Add the local's parent path to the import path, so that Python looks for local packages
   importPath = "$(LOCAL)/.."
   
   // Include local functions
   source = "$(LOCAL)/METKImageDisplay.py"
   source = "$(LOCAL)/METKCodedSegmentation.py"
   
   // Call init() to initalize the script
   initCommand = init
   
   // Handle events from object container
   FieldListener info.outObjectContainer    { command = _cls_info.handleEvents }
   FieldListener roiSelect                  { command = setCurrentROI } // in METKImageDisplay
   FieldListener ignoreEmptyString          { command = ignoreEmptyString }         
   FieldListener forceGeneration	    { command = forceGeneration }
   FieldListener closeImg		    { command = closeImg }
}

Window METKCodedSegmentation {
   style = PlannerStyle
   Vertical {
      Field = ignoreEmptyString
      Field = listenToROI
      Field = roiSelect { title = "ROI:" edit = NO w = 400 }
      ComboBox roiSelect {
         editable = False
         duplicatesEnabled = NO
         comboField = rois
      }
      Button = forceGeneration
      Field = ready { edit = No }
   }
}
