Interface  {
   Inputs {
      Field inObjectContainer { internalName = info.inObjectContainer }      
   }
   Outputs {      
      Field outObjectContainer { internalName = info.outObjectContainer }
      Field csoObject { internalName = UMDPointerToInventor.outInventor comment = "Currently selected object"}
      Field csoObjectColored { internalName = FullPointerToInventor.outInventor comment = "Currently selected object with material"}
   }
   Parameters {
      Field = cso       { type = string persistent = FALSE value = "" }
      Field = roi       { type = string persistent = FALSE value = "" }
      Field = selection { type = vec3f  persistent = FALSE value = "0 0 0" }
      Field = ignorePickable { type = bool value = True }
      Field = objectMustBeVisible { type = bool value = True }
      Field = filterDoubleEvents { type = bool value = False }
      
      Field = moObject       { type = string persistent = FALSE value = "" }
      Field = useColor { type=bool value=False }
      Field = color { type=color value="1,0,0" }
      Field = useTransparency { type=bool value=False }
      Field = transparency { type=double value=0 }
      Field = useSilhouette { type=bool value=False }
      Field = silhouetteColor { type=color value="0,0,0" }
      Field = silhouetteWidth { type=int value=3 }
      Field = silhouetteOnOff { type=bool value=true }
      
   }
}

Commands  {
   // Add the local's parent path to the import path, so that Python looks for local packages
   importPath = "$(LOCAL)"
   
   // Include local functions
   source = "$(LOCAL)/METKCSO.py"
   
   // Call init() to initalize the script
   initCommand = init
   
   // Handle events from object container
   FieldListener info.outObjectContainer { command = _cls_info.handleEvents }   

   FieldListener ignorePickable { command = ignorePickable }   
}

Window METKCSO {
   Vertical {
      Field = cso { title = "CSO:"  w = 400 edit = no }      
      Field = roi { title = "ROI:"  w = 400 edit = no }
      Field = selection { edit = no }
      Field = ignorePickable
      Field = objectMustBeVisible
      Field = filterDoubleEvents
      
      Box MouseOver {
      	layout =vertical
      	Field = moObject { title = "MouseOver-Object:"  w = 400 edit = no }
      	Field = useColor { }
	Field = color { dependsOn=useColor }
	Field = useTransparency { }
	Field = transparency { dependsOn=useTransparency }
	Field = useSilhouette { }
	Field = silhouetteColor { dependsOn=useSilhouette }
	Field = silhouetteWidth { dependsOn=useSilhouette }
	Field = silhouetteOnOff { dependsOn=useSilhouette }
      }
   }
}