//----------------------------------------------------------------------------------
//! Macro module METKSaveCase
/*!
// \file    METKSaveCase.script
// \author  Konrad Mühler, Christian Tietjen
// \date    2006-03-27
//
// // 
*/
//----------------------------------------------------------------------------------


Interface {
   Inputs {
      Field inObjectContainer { internalName = ObjDump.inObjectContainer comment = "Input for METKManager" }
   }
   Outputs {
      Field outObjectContainer { internalName = ObjDump.outObjectContainer }
   }
   Parameters {
      Field fileName       { internalName = ObjDump.fileName }
      Field save           { type = trigger }
      Field saveAs         { type = trigger }
      Field caseLoaded     { type = bool value = false persistent = false }
   }

}


Commands {
   // Add the local's parent path to the import path, so that Python looks for local packages
   importPath = "$(LOCAL)/.."
   
   source = $(LOCAL)/METKSaveCase.py
   
   // Call init() to initalize the script
   initCommand = init
  
   FieldListener ObjInfo.outObjectContainer { command = _cls_info.handleEvents }
   FieldListener save      { command = save }
   FieldListener saveAs    { command = saveAs }
}


Window METKSaveCase {   
   Vertical {
   	expandX=Yes expandY=Yes w = 300 dependsOn = caseLoaded
      	Field = fileName { edit = No }
	Horizontal Case {
		alignX = left
		Button = save
		Button = saveAs { title = "Save As..." }
	}
   }
}

Window SaveAs {
   title = "Save Case File"
   Vertical {
      Field = fileName { w = 400 }
      Horizontal { alignX = Right
         Button { title = Save command = modalDialogSave }
         Button { title = Cancel command = modalDialogCancel }
      }
   }
}
