Interface  {
   Inputs {
      Field inObjectContainer  { internalName = input.inObjectContainer }
      Field outObjectContainer { internalName = output.inObjectContainer }
   }
   Outputs = ""
   Parameters {
      Field = convertFile {
         type = trigger
      }
      Field = detectedFormat {
         type = string
         value = ""
         persistent = FALSE 
      }
      Field = successful {
         type = bool
         value = false
         persistent = FALSE 
      }
   }
}

Commands  {
   // Add the local's parent path to the import path, so that Python looks for local packages
   importPath = "$(LOCAL)/.."
   
   // Include local functions
   source = "$(LOCAL)/ConvertXML.py"
   
   // Call init() to initalize the script
   initCommand = init
   
   // Handle events from object container
   FieldListener convertFile  { command = convertFile callLater = TRUE }
   
   FieldListener {
      listenField = NeckVisionXMLConverter.ready
      listenField = StandardXMLConverter.ready
      listenField = HepaXMLConverter.ready
      command = setSuccessful
   }
}

Window ConvertXML {
   Vertical { w = 300
      Button = convertFile
      Field = detectedFormat { edit = NO }
      Field = successful { edit = NO }
   }
}