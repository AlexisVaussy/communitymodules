// MDL v1 utf8
network  {
  watchlist = ""
}
module Diagram2D {
  internal  {
    frame = "393 -83 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "429 246 444 576"
        sizeHint = "444 576"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = Diagram2D
    minX = 0
    maxX = 63
    autoRangeX = TRUE
    minY = 259.3625488
    maxY = 956.9255371
    autoRangeY = TRUE
    axisColor = "1 1 1"
    axisRotation = LeftBottom
    drawDiagramTitle = FALSE
    diagramTitleString = ""
    borderH = 33
    autoBorderH = TRUE
    borderV = 25
    autoBorderV = TRUE
    drawAxisX = TRUE
    drawTicksX = TRUE
    drawLabelsX = TRUE
    drawAxisTitleX = FALSE
    axisTitleStringX = "X [dn]"
    drawAxisY = TRUE
    drawTicksY = TRUE
    drawLabelsY = TRUE
    drawAxisTitleY = FALSE
    axisTitleStringY = "Y [dn]"
    curveColor = "1 1 1"
    lineStyle = Solid
    markerType = None
    markerSize = 10
    areaOpacity = 0.5
    lineWidth = 1
    antiAlias = FALSE
    button1 = IGNORED
    button2 = IGNORED
    button3 = IGNORED
    shift = IGNORED
    ctrl = IGNORED
    alt = IGNORED
    mousePosX = 0
    mousePosY = 0
    mousePosValid = FALSE
    curveSelection = Diagram
    selectionTolerance = 5
    selectedCurve = -1
    selectedSeries = -1
    selectedSeriesGlobal = -1
    selectedPoint = -1
    maskValid = FALSE
  }
}
module Range {
  internal  {
    frame = "197 13 72 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "370 587 442 108"
        sizeHint = "442 108"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = Range
    start = 0
    step = 1
    end = 64
    middle = 32
    relative = TRUE
    integer = TRUE
    range = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63"
    separator = " "
  }
  internalFields = ""
}
module StringToCurve {
  internal  {
    frame = "385 13 112 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "547 145 336 91"
        sizeHint = "336 91"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = StringToCurve
    curveString = "955.176513671875 956.925537109375 950.982421875 945.0361328125 937.6103515625 930.153564453125 928.977783203125 927.785888671875 930.303955078125 932.82763671875 930.53369140625 928.241455078125 921.0595703125 913.87939453125 908.54541015625 903.200927734375 900.691650390625 898.159423828125 894.191650390625 890.198974609375 887.007080078125 883.803955078125 889.07373046875 894.328857421875 895.89501953125 897.44189453125 889.763671875 882.036865234375 861.442626953125 840.826171875 815.659912109375 790.4619140625 766.968505859375 743.43701171875 722.00341796875 700.532958984375 678.9228515625 657.30078125 634.110107421875 610.89306640625 583.388671875 555.8486328125 533.311279296875 510.740234375 493.096923828125 475.440185546875 458.28515625 441.1123046875 425.444091796875 409.766357421875 398.38330078125 386.984375 382.2021484375 377.4267578125 379.9697265625 382.510986328125 390.544189453125 398.563232421875 411.876953125 425.189697265625 431.133544921875 437.060791015625 451.616455078125 466.14697265625;272.7990397491574 283.8545863641376 272.3791245321892 279.1414014710544 263.7289910831796 266.4359690780305 259.362553312208 269.5667800283241 267.6955082221714 284.598780760108 280.1051892727626 294.3791024697958 284.8654458049222 295.358745225483 290.1756099821293 301.9886273467234 291.5073869865938 300.8481250698702 286.9688511021999 290.2143382206303 274.5096615502168 276.5771776256615 281.0959989374742 296.8163461681954 303.4052528588923 324.908433487996 335.3475252549168 359.5073224288191 359.3990794295823 372.4886028804017 375.4592301679794 394.0436412671822 405.9883380490239 432.5663925267374 438.0389415040961 456.0712118930458 459.9532703400227 477.6332635160285 481.6912541328434 498.5441072782352 498.1433134560727 513.1120630938154 510.5358888481086 522.9258598020032 521.3463486663181 530.0275223451472 523.970112332007 527.1428255880454 521.3861615676448 524.5665941500482 517.2068947434404 515.3059550892337 505.8328353265814 500.1320719409691 500.221782374506 504.181115466524 509.8897460372884 521.5081804971718 533.3928881548361 553.8302247551263 554.7669851409909 560.9413668651749 557.3313547055786 568.0660973602244"
    indexString = "0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63"
    valueSeparator = " "
    curveSeparator = ;
  }
}
module Comment {
  internal  {
    frame = "173 277 88 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "515 430 256 209"
        sizeHint = "256 209"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = Comment
    comment = "Press run in the PythonExec module to start a loop over all slices. The result is then returned in the second tab, which is a list of all mean slice values of the image and all standard deviations.
This string is converted to two Curves using StringToCurve"
  }
  internalFields = ""
}
module ImageStatistics {
  internal  {
    frame = "525 113 120 64"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "506 122 449 586"
        sizeHint = "487 586"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = ImageStat
    innerMin = 0
    innerMax = 1
    autoUpdate = TRUE
    perSlice = TRUE
    currentSlice = 63
    resultsValid = TRUE
    voxelsOutOfRange = 0
    useMask = FALSE
    maskStatus = ""
  }
}
module Info {
  internal  {
    frame = "309 117 56 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "867 488 564 371"
        sizeHint = "564 371"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = Info
    pagedImgInfo = Ok
    bypassIndex = -1
    inPlaceIndex = -1
  }
}
module View2D {
  internal  {
    frame = "409 117 80 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "695 214 200 200"
        sizeHint = "200 200"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = View2D
    inventorInputOn = FALSE
    view2DExtensionsOn = TRUE
    startSlice = 63
    numSlices = 1
    numXSlices = 1
    sliceStep = 1
    slab = 1
    blendMode = BLEND_REPLACE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_LINEAR
    standardKeys = TRUE
    cineMode = CINE_Z
    cineDirection = CINE_PINGPONG
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1000000015
    snapToCenter = FALSE
    zoomMode = VIEW2D_AUTO_ZOOM
    unzoomOnImageChange = FALSE
    sliceZoom = 1
    sliceZoomSynced = 1
    baseColor = "1 1 1"
    margin = "2 2"
    sliceOrigin = "0 0"
    lutCenter = 2047.5
    lutWidth = 4095
    lutUseTraceColors = FALSE
    annotationOn = TRUE
    annotationMode = ANNO_MODE_AUTO
    annotationSizeMode = ANNO_SHOW_DETAILED
    annotationCol = "0.8999999761581421 0.8999999761581421 0.8999999761581421"
    annotationFontSize = ANNO_SIZE_AUTO
    annoCoords = Voxel
    annoCTValue = AsIs
    borderOn = TRUE
    borderColor = "0.8999999761581421 0.8999999761581421 0.8999999761581421"
    valueHighPrecision = FALSE
    plane = "0 0 1 63.5"
  }
  internalFields = ""
}
module LocalImage {
  internal  {
    frame = "401 285 96 56"
    moduleGroupName = ""
  }
  fields  {
    instanceName = LocalImage
    name = $(DemoDataPath)/Bone.tiff
    trueName = "C:/Program Files/MeVisLab2.0VC9/Packages/MeVisLab/Resources/DemoData/Bone.tiff"
    autoLoad = TRUE
    status = "File open"
  }
  internalFields = ""
}
module PythonExec {
  internal  {
    frame = "177 117 96 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "100 495 572 340"
        sizeHint = "301 263"
        wasOpen = no
        wasActive = no
      }
    }
  }
  fields  {
    instanceName = PythonExec
    command = "*nw = ctx.parent()
mean = ''
stddev = ''
for i in range( int($1$) ) :
  nw.field('View2D.startSlice').value = i
  mean += nw.field("ImageStat.totalMean").stringValue() + ' '
  stddev += nw.field('ImageStat.totalStdDev').stringValue() + ' '
  MLAB.processInventorQueue()
%1% = mean.strip() + ';' + stddev.strip()
*"
    arg1 = 64
    arg2 = ""
    arg3 = ""
    onArgChange = FALSE
    result1 = "955.176513671875 956.925537109375 950.982421875 945.0361328125 937.6103515625 930.153564453125 928.977783203125 927.785888671875 930.303955078125 932.82763671875 930.53369140625 928.241455078125 921.0595703125 913.87939453125 908.54541015625 903.200927734375 900.691650390625 898.159423828125 894.191650390625 890.198974609375 887.007080078125 883.803955078125 889.07373046875 894.328857421875 895.89501953125 897.44189453125 889.763671875 882.036865234375 861.442626953125 840.826171875 815.659912109375 790.4619140625 766.968505859375 743.43701171875 722.00341796875 700.532958984375 678.9228515625 657.30078125 634.110107421875 610.89306640625 583.388671875 555.8486328125 533.311279296875 510.740234375 493.096923828125 475.440185546875 458.28515625 441.1123046875 425.444091796875 409.766357421875 398.38330078125 386.984375 382.2021484375 377.4267578125 379.9697265625 382.510986328125 390.544189453125 398.563232421875 411.876953125 425.189697265625 431.133544921875 437.060791015625 451.616455078125 466.14697265625;272.7990397491574 283.8545863641376 272.3791245321892 279.1414014710544 263.7289910831796 266.4359690780305 259.362553312208 269.5667800283241 267.6955082221714 284.598780760108 280.1051892727626 294.3791024697958 284.8654458049222 295.358745225483 290.1756099821293 301.9886273467234 291.5073869865938 300.8481250698702 286.9688511021999 290.2143382206303 274.5096615502168 276.5771776256615 281.0959989374742 296.8163461681954 303.4052528588923 324.908433487996 335.3475252549168 359.5073224288191 359.3990794295823 372.4886028804017 375.4592301679794 394.0436412671822 405.9883380490239 432.5663925267374 438.0389415040961 456.0712118930458 459.9532703400227 477.6332635160285 481.6912541328434 498.5441072782352 498.1433134560727 513.1120630938154 510.5358888481086 522.9258598020032 521.3463486663181 530.0275223451472 523.970112332007 527.1428255880454 521.3861615676448 524.5665941500482 517.2068947434404 515.3059550892337 505.8328353265814 500.1320719409691 500.221782374506 504.181115466524 509.8897460372884 521.5081804971718 533.3928881548361 553.8302247551263 554.7669851409909 560.9413668651749 557.3313547055786 568.0660973602244"
    result2 = ""
    comString = "*nw = ctx.parent()
mean = ''
stddev = ''
for i in range( int('64') ) :
  nw.field('View2D.startSlice').value = i
  mean += nw.field("ImageStat.totalMean").stringValue() + ' '
  stddev += nw.field('ImageStat.totalStdDev').stringValue() + ' '
  MLAB.processInventorQueue()
result1 = mean.strip() + ';' + stddev.strip()
*"
  }
  internalFields = ""
}
connections  {
  Diagram2D.inCurveList = StringToCurve.outCurveList
  Range.end = Info.sizeZ
  StringToCurve.curveString = PythonExec.result1
  StringToCurve.indexString = Range.range
  ImageStat.input0 = LocalImage.outImage
  ImageStat.currentSlice = View2D.startSlice
  Info.input0 = LocalImage.outImage
  View2D.inImage = LocalImage.outImage
  PythonExec.arg1 = Info.sizeZ
}
networkModel = ""
