UserGenres {
  Genre BIGR { Genre BIGR-WEM    { title = WEM } }
}

//----------------------------------------------------------------------------------
// MLModule WEMPlane
//----------------------------------------------------------------------------------
MLModule WEMPlane {
  DLL = "MLWEMCommunityModules"
  author = "Bart De Dobbelaer"
  status = "work-in-progress"
  genre    = WEMProcessing
  comment  = "Draw WEM plane intersected by WEM bounding box"
  keywords = "WEM plane"

  seeAlso = "WEMClip"

  exampleNetwork = "$(LOCAL)/WEMPlane/WEMPlaneExample.mlab"
  documentation  = "$(LOCAL)/WEMPlane/WEMPlane.html"

  #include $(LOCAL)/includes/WEMProcessorInterface.txt

  Window {

    Category {

      #include $(LOCAL)/includes/WEMGeneratorButtonBar.txt

      Box "" {

        TabView {
          mode = Invisible
          name = "parametersTab"

          TabViewItem "Output" {

            Field = plane
            
            Separator { direction = Horizontal }
            
            Checkbox = generateEdges

            #include $(LOCAL)/includes/WEMGeneratorOutputItems.txt
          }
          #include $(LOCAL)/includes/WEMGeneratorTabViewItems.txt
        }
      }
      #include $(LOCAL)/includes/WEMGeneratorFooter.txt
    }
    Execute = updateTabs
  }
} // MLModule WEMPlane

//----------------------------------------------------------------------------------
// MLModule WEMVolume
//----------------------------------------------------------------------------------
MLModule WEMVolume {
  DLL            = "MLWEMCommunityModules"

  genre          = "BIGR-WEM"
  group          = "BIGR"
  author         = "Coert Metz"
  status         = "work-in-progress"
  comment        = "Computes the volumes of the WEM patches"
  keywords       = "WEM,volume"
  documentation = "$(LOCAL)/WEMVolume/WEMVolume.html"
  seeAlso        = ""
  exampleNetwork = "$(LOCAL)/WEMVolume/WEMVolumeExample.mlab"
    
  Commands { FieldListener isProcessing { command = "*js: if (ctx.field("isProcessing").boolValue()){ MLAB.setWaitCursor(); } else { MLAB.removeWaitCursor(); } *" } 
  
    // put more commands in here if required
  
  }
  
  Description {
  
    // put the fields' description in here if required
  
  }

  Window {
    minimumWidth = 250

    Category "Main" {

      Field minVolume { 
        expandX = True
        edit = False
      }
      Field minVolumePatchIndex {
        expandX = True
        edit = False        
      }
      Field maxVolume {
        expandX = True
        edit = False        
      }
      Field maxVolumePatchIndex {
        expandX = True
        edit = False        
      }
      
      //Separator { direction = horizontal }

      //Horizontal {
      //CheckBox autoApply { title = "Auto Apply" }
      //Field apply        { title = "Apply"      }        
      //}
    }    
  }
} // MLModule WEMVolume

//----------------------------------------------------------------------------------
// MLModule WEMCenterOfMass
//----------------------------------------------------------------------------------
MLModule WEMCenterOfMass {
  DLL            = "MLWEMCommunityModules"

  genre          = "BIGR-WEM"
  group          = "BIGR"
  author         = "Coert Metz"
  status         = "stable"
  comment        = "Computes the center of mass of the nodes of WEM object"
  keywords       = "WEM,Center of Mass,Centroid"
  seeAlso        = ""
  documentation  = "$(LOCAL)/WEMCenterOfMass/WEMCenterOfMass.html"
  exampleNetwork = "$(LOCAL)/WEMCenterOfMass/WEMCenterOfMassExample.mlab" 
  
  Commands { FieldListener isProcessing { command = "*js: if (ctx.field("isProcessing").boolValue()){ MLAB.setWaitCursor(); } else { MLAB.removeWaitCursor(); } *" } 
  
    // put more commands in here if required
  
  }

  Description {
  
    // put the fields' description in here if required
  
  }

  Window {

    Category "Main" {

      Field centerOfMass { 
        expandX = True
      }
      
      Field inverseCenterOfMass { 
        expandX = True
      }
      
      Field useSurface {
        tooltip = 
"If checked the centroid is calculated through a 
weighted average of the centroids of all faces. Otherwise 
the centroid is the average of the node positions"
      }
      
      //Separator { direction = horizontal }

      //Horizontal {
        //CheckBox autoApply { title = "Auto Apply" }
        //Field apply        { title = "Apply"      }        
      //}
    }    
  }
} // MLModule WEMCenterOfMass

//----------------------------------------------------------------------------------
// MLModule WEMCMSelectPatches
//----------------------------------------------------------------------------------
MLModule WEMCMSelectPatches {
  DLL            = "MLWEMCommunityModules"

  genre          = "BIGR-WEM"
  group          = "BIGR"
  author         = "Coert Metz"
  status         = "stable"
  comment        = "Computes the center of mass of a WEM object"
  keywords       = "WEM,Center of Mass,Centroid"
  seeAlso        = ""
  documentation  = "$(LOCAL)/WEMCMSelectPatches/WEMCMSelectPatches.html"
  exampleNetwork = "$(LOCAL)/WEMCMSelectPatches/WEMCMSelectPatchesExample.mlab"
  deprecatedName = "WEMSelectPatch"
  
  Commands { FieldListener isProcessing { command = "*js: if (ctx.field("isProcessing").boolValue()){ MLAB.setWaitCursor(); } else { MLAB.removeWaitCursor(); } *" } 
  
    // put more commands in here if required
  
  }

  Description {
  
    // put the fields' description in here if required
  
  }

  Window {

    Category "Main" {
      Field patchStartIndex {}
      Field patchEndIndex {}
      CheckBox onePatch {}
    }    
  }
} // MLModule WEMCMSelectPatches

//----------------------------------------------------------------------------------
// MLModule WEMNodesToFile
//----------------------------------------------------------------------------------
MLModule WEMNodesToFile {
  documentation = "$(LOCAL)/WEMNodesToFile/WEMNodesToFile.html"
  DLL            = "MLWEMCommunityModules"

  genre          = "BIGR-WEM"
  group          = "BIGR"
  author         = "Coert Metz"
  status         = "stable"
  comment        = "Output WEM node coordinates to a text filed"
  keywords       = "WEM,nodes,output,save,file"
  seeAlso        = ""
  
  Commands { FieldListener isProcessing { command = "*js: if (ctx.field("isProcessing").boolValue()){ MLAB.setWaitCursor(); } else { MLAB.removeWaitCursor(); } *" } 
  
    // put more commands in here if required
  
  }

  Description {
  
    // put the fields' description in here if required
  
  }

  Window {
    minimumWidth = 400

    Vertical {
      margin = 3
      Field filename { 
        expandX = True 
        browseButton = True
        browseMode = save
      }
      Field transformixCompatible {}
      Separator {}
      Button save {}
    }    
  }
} // MLModule WEMCenterOfMass

