Interface  {
   Inputs = ""
   Outputs = ""
   Parameters {
      Field METKStructureGroupBrowser { type=METKStructureGroupBrowser }
      Field LoadFile { type=trigger }
      Field LoadUsedXMLFile { type=trigger }
      //    Field refreshbutton { type=trigger }
      Field LastXMLFile { type=string }
      Field lymphSize { type=double value=10}
   }
} // Interface

Commands {
   importPath = "$(LOCAL)"
   importPath = "$(LOCAL)/../../../Projects/MedicalExplorationToolkit"
   source = $(LOCAL)/Label3DDemo.py
   initCommand = init
   FieldListener METKStructureGroupBrowser.info.notify { command=refresh }
   FieldListener labelSwitcher.info.notify { command=refresh }
} // Commands



Window Label3DDemo {
   
   w=950
   h=700
   style = kStyle

   expandX = yes  expandY = yes  
   bgMode = SmoothStretch
   
   initCommand = initWindow
   
   
   Vertical {
      expandX = yes  expandY = yes 
      MenuBar {
         style { titleFont { family = tahoma size = 9 } }
         expandY = No
         expandX = No
         SubMenu "File" {
            MenuItem "Load Recent File"  { command = loadUsedXMLFile }
            MenuItem "Load File"  { command = openCase }
            //   MenuItem "Quit"  { command = exit }
         } //SubMenu
      }//MenuBar
    
      Splitter {
         direction = horizontal
         expandX=true expandY=true

         //Left Pane for Options and more
         Vertical {
            expandX=false expandY=true
            margin=10
            spacing=10
            w=300
        
            //TabView for Options
            TabView {
               mode=toolbox
               expandX=true expandY=true
          
               TabViewItem Case {
                  expandX=true expandY=true
                  tabTitle = "Case Management"
                  spacing=5
                  margin=5
          
                  Vertical {
                     Label { title="Recent case:" }
                     Field METKManager.fileName { title="" edit = no wrap=true }
                  }
          
                  Horizontal {
                     Button METKManager.load { title="Load recent case"  dependsOn = "* !METKManager.caseLoaded && METKManager.fileName != "" *" alignX=Center }
                     Button METKManager.browse { title = "Browse..." dependsOn = !METKManager.caseLoaded alignX=Center }
                  }
                    
                  Horizontal {
                     Button METKManager.save { dependsOn = METKManager.caseLoaded alignX=Center }
                     Button METKManager.saveAs { title = "Save As..." dependsOn = METKManager.caseLoaded alignX=Center }
                  }
                    
                  Button METKManager.cleanup { dependsOn = METKManager.caseLoaded alignX=Center }         
                 
                  VSpacer { w=10 }                   
               } //TabViewItem Case
          
               TabViewItem Text {
                  expandX=true expandY=true
                  tabTitle = "Label Text"
                  spacing=5
                  margin=5
          
                  Button { title="Set Names as Label" command=setLabelsNames alignX=center }
                  Button { title="Set StructureGroup as Label" command=setLabelsStructureGroup alignX=center }
                  Button { title="Set Name and Measures as Label" command=setLabelsMeasures alignX=center }
                  Button { title="Set Name and Volume for Liver" command=setLabelsLiver alignX=center }
            
                  Vertical { frameShape = HLine }
            
                  Horizontal {
                     HSpacer { h=10 }
                     Button { title="Lymphnodes larger ..." command=setLymphLarge alignX=center }
                     Field lymphSize { title="" }
                     HSpacer { h=10 }
                  }
             
                  Vertical { frameShape = HLine }
             
                  Button { title="Set Label Backgrounds to Structure's Color" command=setAutoBG alignX=center }             
                  Button { title="Set Label Backgrounds to Default Color" command=setDefaultBG alignX=center }
             
                  VSpacer {w=10}                  
               } //TabViewItem Text

               TabViewItem Visibility {
                  expandX=true expandY=true          
                  tabTitle = "Label Visibility"
                  spacing=5
                  margin=5
            
                  CheckBox LabelsOnOff.on { title="Render Labels" }

                  Label { title="Labels On/Off:" }
                  Panel {
                     module=labelSwitcher
                     h=200
                  }
                  Empty { w=10 h=10 }
                  Label { title="Visibility On/Off:" }
                  Panel {
                     module=METKStructureGroupBrowser
                     h=200
                  } //TabViewItem Visibility
                    
                  VSpacer {w=10}
               } //TabViewItem Visibility
          
          
               TabViewItem Appearance {
                  expandX=true expandY=true
                  tabTitle = "Appearance"
                  spacing=5
                  margin=5
            
                  CheckBox METKLabels.layHaloColorInvert { title = "Halo Color Invert" }
                  Horizontal {
                     Label { title = "Background:" }
                     ColorEdit METKLabels.bgColor { }
                  }
                  Horizontal {
                     Label { title = "Default LabelBG:" }
                     ColorEdit METKLabels.defaultLabelBgColor { }
                  }
                  Horizontal {
                     Label { title = "Font:" }
                     ColorEdit METKLabels.fontColor { }
                  }
                  Horizontal {
                     Label { title = "RefLines:" }
                     ColorEdit METKLabels.refLineColor { }
                  }
                  Horizontal {
                     Label { title = "RefLineHalos:" }
                     ColorEdit METKLabels.refLineHaloColor { }
                  }
                  Horizontal {
                     Label { title = "RefLineWidth:" }
                     ComboBox METKLabels.lineWidth {
                        items {
                           item {title = "1"}
                           item {title = "2"}
                           item {title = "3"}
                           item {title = "4"}
                           item {title = "5"}
                        }
                     }
                  }
            
                  Field METKLabels.fontSize { }
                  Field METKLabels.lineSpacing { }            
                  Field METKLabels.insetSpace { }  
                  Field METKLabels.orbitDistance { }
             
                  Box arrow {
                     title = "Arrow"
                     layout = Vertical

                     Horizontal {
                        Label { title = "Arrow Color:" }
                        ColorEdit METKLabels.arrowColor { }
                     }
                     Horizontal {
                        Label { title = "Arrow Halo:" }
                        ColorEdit METKLabels.arrowColorHalo { }
                     }
                     Field METKLabels.arrowSize { title = "Arrow Size:" }
                     Field METKLabels.arrowThickness { title = "Arrow Thickness:" }
                

                  }
                        
                  VSpacer {w=10}
               } //TabViewItem Appearance  
          
               TabViewItem SingleLabels {
                  expandX=true expandY=true
                  tabTitle = "Single Labels"
                  spacing=5
                  margin=5
                  Panel {
                     module = selector
                  }
                  Panel {
                     module = METKObjBrowser
                     window = shortLabels
                  }
            
                  Panel {
                     module = METKObjBrowser
                     window = shortVisuals
                  }
            
                  VSpacer {w=10}
               } //TabViewItem SingleLabels
          
               TabViewItem Options {
                  expandX=true expandY=true
                  tabTitle = "Options"
                  spacing=5
                  margin=5
            
                  Field METKLabels.invisObjStyle { title = "Invisible Labels:" }
                  CheckBox METKLabels.labelBackground { title = "Labelbackground" }
                  Field METKLabels.labelBGAlpha { title = "Background Alpha:" }
                  CheckBox METKLabels.layOrthRefLines { title = "Orthogonal Lines" }
                  CheckBox METKLabels.labelIfInteraction { title = "Interacting Labels" }
                  CheckBox METKLabels.motionLabeling { title = "MotionLabeling" }
                  //////Checkbox METKLabels.layFlushLayout { title="Flush Layout (FlushLayout wurde komplett disabled)" }
            
                  Button METKLabels.Refresh {title="Refresh" }
                  Button METKLabels.ReConnectInventor {title="ReConnectInventor" }
                  Field METKLabels.skipLevel {}
            
                  VSpacer {w=10}            
               } //TabViewItem Options

          
               TabViewItem Debug {
                  expandX=true expandY=true
                  tabTitle = "Debug Facilities"
                  spacing=5
                  margin=5
          

                  Field METKLabels.debug_drawOrbit {}
                  Button METKLabels.printLabelObjects {}
                  Button METKLabels.writeBufferDFT {}
          
                  VSpacer {w=10}
               }//TabViewItem Debug
          
            } //TabView for all Options
          
         } //Vertical
      
      
         //3DViewer
         Panel {
            module  = METKViewer3D
            window  = METKViewer
            expandX=yes expandY=yes
            w=600
         } //Panel for 3DViewer


      
      
      }
    
    
      /*    grid {
      margin = 15
      spacing = 10
      expandX = yes  expandY = yes
      Horizontal {
      expandX = yes  expandY = yes
      Horizontal{
      expandX = no  expandY = yes
      Vertical {
      alignY = Top
      Box {
      layout = Grid
      title = "Structures"
      expandX = no  expandY = yes
      x=0 y=0
      Panel {
      w=200 h=200
      x=0 y=0
      module  = METKStructureGroupBrowser
      window  = METKStructureGroupBrowser
      expandX=no expandY=yes
      } // Panel
      }
      Box {
      layout = Grid
      title = "Labeling"
      expandX = no  expandY = yes
      x=0 y=1
      Panel {
      w=200 h=200
      x=0 y=0
      module  = labelSwitcher
      window  = METKStructureGroupBrowser
      expandX=no expandY=yes
      } // Panel
      } // Box Script           
      } //Vertical
      Vertical {
      alignY = Top
      Box {
      layout = Vertical
      title = "Optionen"
      expandX = yes  expandY = yes

      CheckBox METKLabels.labelIfInvis { title = "Invisible Labels" }
      CheckBox METKLabels.labelBackground { title = "Labelbackground" }
      CheckBox METKLabels.layOrthRefLines { title = "Orthogonal Lines" }
      CheckBox METKLabels.labelIfInteraction { title = "Interacting Labels" }
      CheckBox METKLabels.motionLabeling { title = "MotionLabeling" }
      CheckBox METKLabels.layRefLinesForInvisObj { title = "Invisible Ref-Lines" }
      CheckBox METKLabels.layArrowsForInvisObj { title = "Invisible Arrows" }
      CheckBox METKLabels.layHaloColorInvert { title = "Halo Color Invert" }
      Horizontal {
      Label { title = "Arrow:" }
      ColorEdit METKLabels.arrowColor { }
      }
      Horizontal {
      Label { title = "Background:" }
      ColorEdit METKLabels.bgColor { }
      }
      Horizontal {
      Label { title = "LabelBG:" }
      ColorEdit METKLabels.labelBgColor { }
      }
      Horizontal {
      Label { title = "Font:" }
      ColorEdit METKLabels.fontColor { }
      }
      Horizontal {
      Label { title = "ArrowHalo:" }
      ColorEdit METKLabels.arrowColorHalo { }
      }
      Horizontal {
      Label { title = "RefLines:" }
      ColorEdit METKLabels.refLineColor { }
      }
      Horizontal {
      Label { title = "RefLineHalos:" }
      ColorEdit METKLabels.refLineHaloColor { }
      }
      Horizontal {
      Label { title = "RefLineWidth:" }
      ComboBox METKLabels.lineWidth {
      items {
      item {title = "1"}
      item {title = "2"}
      item {title = "3"}
      item {title = "4"}
      item {title = "5"}
      }
      }
      }
      Button METKLabels.Refresh {title="Refresh" }
      Button METKLabels.ReConnectInventor {title="ReConnectInventor" }
      Field METKLabels.debug_drawOrbit {}
      Button METKLabels.printLabelObjects {}
      Button METKLabels.writeBufferDFT {}
      Field METKLabels.skipLevel {}
      } // Box Optionen
      } //Vertical
      } // Horizontal         
      Panel {
      w=400 h=400
      x=0 y=1
      module  = METKViewer3D
      window  = METKViewer
      expandX=yes expandY=yes
      } // Panel
      } // Horizontal
      } // Grid
      Box {
      layout = Grid
      title = "Recent File"
      expandX = yes  expandY = no
      x=0 y=0
      Label {
      titleField = LastXMLFile
      x=0 y=0
      } // Label
      } // Box Recent XML-File*/
    
    
   } // Vertival

} // Window
