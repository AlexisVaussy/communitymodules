Interface  {
   Inputs {
      Field inObjectContainer { internalName = info.inObjectContainer }
   }
   Outputs {
      Field outObjectContainer { internalName = info.outObjectContainer }
   }
   Parameters {
      Field mode { type = enum value = "Wavefront" values = "Inventor ASCII,Inventor Binary,STL ASCII,STL Binary,VRML 97,WEM,Wavefront,Object File Format,Geom View,Stanford Polygon" }
      Field path { type = string value = "" }
      Field save { type = trigger }
   }
}

Deployment {
   module = SoSilhouette
}

Commands  {
   // Add the local's parent path to the import path, so that Python looks for local packages
   importPath = "$(LOCAL)/.."
   
   // Include local functions
   source = "$(LOCAL)/METKConvertFiles.py"
   
   // Call init() to initalize the script
   initCommand = init
   
   // Handle events from object container
   FieldListener info.outObjectContainer { command = _cls_info.handleEvents }
   FieldListener save { command = save }
}

Window METKConvertFiles {
   Vertical {
      expandY = yes
      Panel {
         module  = METKStructureGroupBrowser
         window  = singleListView
         expandY = yes
      }
      Field = mode
      Field = SoShapePartition.shapePartitioning
      Field = path { browseButton = YES browseMode = directory w = 200 }
      Button = save
   }
}
